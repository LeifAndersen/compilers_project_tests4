(program
 (define break (void))
 (define return (void))
 (define continue (void))
 (define $current-handler (void))
 (define g$foo (void))
 (define g$x (void))
 (begin
   (set! g$x 0)
   (set! g$foo
     (lambda ()
       (call/ec
        (lambda (return)
          ((lambda (x)
             (begin
               (call/ec
                (lambda (break)
                  ((lambda (loop)
                     (begin
                       (set! loop
                         (lambda ()
                           (if (< x 100)
                             (begin
                               (call/ec
                                (lambda (continue)
                                  ((lambda ()
                                     (begin
                                       (set! x (+ x 3))
                                       (if (< x 10)
                                         ((lambda ()
                                            (begin (continue (void)))))
                                         (void))
                                       (if (>= x 10)
                                         ((lambda () (begin (break (void)))))
                                         (void)))))))
                               (loop))
                             (void))))
                       (loop)
                       ((lambda () (begin (set! x 2))))))
                   (void))))
               (return (void))))
           (void))))))
   (py-print g$x)))
